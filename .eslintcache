[{"C:\\Users\\SAHIL's\\weather\\src\\index.js":"1","C:\\Users\\SAHIL's\\weather\\src\\App.js":"2","C:\\Users\\SAHIL's\\weather\\src\\reportWebVitals.js":"3","C:\\Users\\SAHIL's\\weather\\src\\components\\weather.js":"4","C:\\Users\\SAHIL's\\weather\\src\\components\\loader.js":"5","C:\\Users\\SAHIL's\\weather\\src\\components\\timezone.js":"6"},{"size":500,"mtime":1607973958768,"results":"7","hashOfConfig":"8"},{"size":160,"mtime":1607973753388,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1607973945593,"results":"10","hashOfConfig":"8"},{"size":3327,"mtime":1608145014188,"results":"11","hashOfConfig":"8"},{"size":147,"mtime":1608126172420,"results":"12","hashOfConfig":"8"},{"size":446,"mtime":1608143753973,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"t6b0bh",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\SAHIL's\\weather\\src\\index.js",[],["29","30"],"C:\\Users\\SAHIL's\\weather\\src\\App.js",[],"C:\\Users\\SAHIL's\\weather\\src\\reportWebVitals.js",[],"C:\\Users\\SAHIL's\\weather\\src\\components\\weather.js",["31"],"import React, { useState, useEffect } from 'react';\r\nimport Timezone from './timezone';\r\nimport Loader from './loader';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './weather.css';\r\nconst Weather = ()=> {\r\n    const [city, setCity] = useState(\"hisar\");\r\n    const [search, setSearch] = useState(\"hisar\");\r\n    useEffect(() => {\r\n        const fetchApi = async () =>{\r\n            const url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=0338409921a1c1c559e930b80c50409a`;\r\n            let response = await fetch(url);\r\n            let jsonData = await response.json();\r\n            console.log(jsonData);\r\n            setCity(jsonData);\r\n        }\r\n        fetchApi(); \r\n    }, [search]);\r\n    let ico=\"http://openweathermap.org/img/wn/\";\r\n    return (\r\n        <div className=\"main\">\r\n                <div className=\"d-flex ml-1\">  \r\n                    <input type=\"search\" placeholder=\"Search City\" \r\n                className=\"mt-2 ml-3 sea col-10 col-sm-10 col-md-11 col-lg-11 col-xl-11\"  \r\n                    onChange={\r\n                        (e)=>{\r\n                            setSearch(e.target.value);\r\n                        }\r\n                    }\r\n                    />\r\n                    <i className=\"fas fa-search col-1 mt-3 mr-0\"/>    \r\n                </div>\r\n           { \r\n               (!city.wind) ? (\r\n                   <div className=\"minHeight flex-box flex-column\">\r\n                    <Loader/><br/>\r\n                    <b>Enter City</b>\r\n                    </div>\r\n                    ) : \r\n               ( <>                \r\n                <div>\r\n                <div className=\"mt-3 ml-3 d-flex justify-content-center\">\r\n                    <b className=\"s1\">{city.name}, {city.sys.country }</b>\r\n                    <Timezone name={city.timezone}/>\r\n                          \r\n                </div>\r\n                <div className=\"flex-box\">\r\n                    <div className=\"mt-4 temp\">\r\n                        <div className=\"flex-column ml-3 mt-3\">\r\n                            <h2>{city.main.temp} 째C</h2>\r\n                            <p className=\"text-capitalize\">{city.weather[0].description}</p>\r\n                        </div>\r\n                        \r\n                        \r\n                        {\r\n                            !(ico=ico+ `${city.weather[0].icon}` + \"@2x.png\") ? \r\n                            null: <img src={ico} alt=\"img\"/>\r\n                        }\r\n                        \r\n                    </div>\r\n                </div>\r\n                <p className=\"mt-4 ml-3 text-capitalize s2\">\r\n                    <hr/>\r\n                    <span>Feels:</span> {city.main.feels_like} 째C<br/>\r\n                    <span>Min Temp:</span> {city.main.temp_min} 째C<br/>\r\n                    <span>Max Temp:</span> {city.main.temp_max} 째C <hr/>\r\n                </p>\r\n                <p className=\"mt-4 ml-3 s3\">\r\n                <span>Wind:</span> {city.wind.speed} m/s<br/>\r\n                <span>Pressure:</span> {city.main.pressure} hPa<br/>\r\n                <span>Humidity:</span> {city.main.humidity} %<br/>\r\n                </p>\r\n            </div>  \r\n            </>\r\n               )\r\n           } \r\n            \r\n        </div>\r\n        \r\n    )\r\n            \r\n}\r\nexport default Weather;","C:\\Users\\SAHIL's\\weather\\src\\components\\loader.js",[],["32","33"],"C:\\Users\\SAHIL's\\weather\\src\\components\\timezone.js",[],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":56,"column":66,"nodeType":"40","messageId":"41","endLine":56,"endColumn":67},{"ruleId":"34","replacedBy":"42"},{"ruleId":"36","replacedBy":"43"},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["44"],["45"],"no-global-assign","no-unsafe-negation"]